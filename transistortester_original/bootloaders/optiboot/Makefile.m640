#
# Makefile for AVR chips, ATmega640 and ATmega1280
#
# * Copyright 2013-2015 by Bill Westfield.  Part of Optiboot.
# * reorganized 2017 by K.-H. Kuebbeler
# * This software is licensed under version 2 of the Gnu Public Licence.
# * See optiboot.c for details.
#
#

################################################
# generic atmega1280
# let board specific change the frequency and fuses
ifndef TARGET
atmega1280: TARGET := atmega1280
endif
atmega1280: MCU_TARGET := atmega1280
atmega1280: override FLASH_SIZE := 131072
atmega1280: override FLASH_PAGE_SIZE := 256
atmega1280: override BOOT_PAGE_LEN := 1024
ifndef HFUSE
# 1024 byte boot
atmega1280: HFUSE := DE
endif
ifndef LFUSE
# Low power xtal (16MHz) 16KCK/14CK+65ms
atmega1280: LFUSE := FF
endif
ifndef EFUSE
# 2.7V brownout; wants F5 for some reason...
atmega1280: EFUSE := FD
endif
atmega1280: AVR_FREQ := 16000000
atmega1280: hex_file 

################################################
# generic atmega2560
# let board specific change the frequency and fuses
ifndef TARGET
atmega2560: TARGET := atmega2560
endif
atmega2560: MCU_TARGET := atmega2560
atmega2560: override FLASH_SIZE := 262144
atmega2560: override FLASH_PAGE_SIZE := 256
atmega2560: override BOOT_PAGE_LEN := 1024
ifndef HFUSE
# 1024 byte boot
atmega2560: HFUSE := 9E
endif
ifndef LFUSE
# Low power xtal (16MHz) 16KCK/14CK+65ms
atmega2560: LFUSE := FF
endif
ifndef EFUSE
# 2.7V brownout;
atmega2560: EFUSE := FD
endif
atmega2560: AVR_FREQ := 16000000
atmega2560: hex_file 

################################################
# generic atmega1281
# let board specific change the frequency and fuses
ifndef TARGET
atmega1281: TARGET := atmega1281
endif
atmega1281: MCU_TARGET := atmega1281
atmega1281: override FLASH_SIZE := 131072
atmega1281: override FLASH_PAGE_SIZE := 256
atmega1281: override BOOT_PAGE_LEN := 1024
ifndef HFUSE
# 1024 byte boot
atmega1281: HFUSE := DE
endif
ifndef LFUSE
# Low power xtal (16MHz) 16KCK/14CK+65ms
atmega1281: LFUSE := FF
endif
ifndef EFUSE
# 2.7V brownout; wants F5 for some reason...
atmega1281: EFUSE := F5
endif
atmega1281: AVR_FREQ := 16000000
atmega1281: hex_file 

################################################
# generic atmega2561
# let board specific change the frequency and fuses
ifndef TARGET
atmega2561: TARGET := atmega2561
endif
atmega2561: MCU_TARGET := atmega2561
atmega2561: override FLASH_SIZE := 262144
atmega2561: override FLASH_PAGE_SIZE := 256
atmega2561: override BOOT_PAGE_LEN := 1024
ifndef HFUSE
# 1024 byte boot
atmega2561: HFUSE := 9E
endif
ifndef LFUSE
# Low power xtal (16MHz) 16KCK/14CK+65ms
atmega2561: LFUSE := FF
endif
ifndef EFUSE
# 2.7V brownout;
atmega2561: EFUSE := FD
endif
atmega2561: AVR_FREQ := 16000000
atmega2561: hex_file 



################################################
# generic atmega640
# let board specific change the frequency and fuses
ifndef TARGET
atmega640: TARGET := atmega640
endif
atmega640: MCU_TARGET := atmega640
atmega640: override FLASH_SIZE := 65536
atmega640: override FLASH_PAGE_SIZE := 256
atmega640: override BOOT_PAGE_LEN := 1024
ifndef HFUSE
# 1024 byte boot
atmega640: HFUSE := DE
endif
ifndef LFUSE
# Low power xtal (16MHz) 16KCK/14CK+65ms
atmega640: LFUSE := FF
# 2.7V brownout; wants F5 for some reason...
endif
ifndef EFUSE
atmega640: EFUSE := FD
endif
atmega640: AVR_FREQ := 16000000
atmega640: hex_file 



# MEGA1280 Board (this is different from the atmega1280 chip platform)
# Mega has a minimum boot size of 1024 bytes, so enable extra functions
# Note that optiboot does not (can not) work on the MEGA2560
#mega: TARGET = atmega1280
mega1280: TARGET := mega1280
export
mega1280:
	$(SUB_MAKE) atmega1280

