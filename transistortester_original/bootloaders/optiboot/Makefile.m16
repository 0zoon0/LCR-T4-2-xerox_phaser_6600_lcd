#
# Makefile for AVR chips, ATmega8, ATmega16, ATmega32 and ATmega64
# Some older chips are probably also supported ATmega162, ATmega163, ATmega323
#
# * Copyright 2013-2015 by Bill Westfield.  Part of Optiboot.
# * reorganized 2017 by K.-H. Kuebbeler
# * This software is licensed under version 2 of the Gnu Public Licence.
# * See optiboot.c for details.

#---------------------------------------------------------------------------
#
# Note about fuses:
# the efuse should really be 0xf8; since, however, only the lower
# three bits of that byte are used on the atmega168, avrdude gets
# confused if you specify 1's for the higher bits, see:
# http://tinker.it/now/2007/02/24/the-tale-of-avrdude-atmega168-and-extended-bits-fuses/
#
# similarly, the lock bits should be 0xff instead of 0x3f (to
# unlock the bootloader section) and 0xcf instead of 0x2f (to
# lock it), but since the high two bits of the lock byte are
# unused, avrdude would get confused.
#---------------------------------------------------------------------------
#


################################################
# generic atmega8
# let board specific change the frequency and fuses
ifndef TARGET
atmega8: TARGET := atmega8
endif
atmega8: override MCU_TARGET := atmega8
atmega8: override FLASH_SIZE := 8192
atmega8: override FLASH_PAGE_SIZE := 64
atmega8: override BOOT_PAGE_LEN := 256
atmega8: AVR_FREQ := 16000000 
ifndef HFUSE
# SPIEN, CKOPT (for full swing xtal), Bootsize=512B
atmega8: HFUSE := CC
endif
ifndef LFUSE
# 2.7V brownout, 16MHz Xtal, 16KCK/14CK+65ms
atmega8: LFUSE := BF
endif
atmega8: hex_file


################################################
# generic atmega16
# let board specific change the frequency and fuses
ifndef TARGET
atmega16: TARGET := atmega16
endif
atmega16: override MCU_TARGET := atmega16
atmega16: override FLASH_SIZE := 16384
atmega16: override FLASH_PAGE_SIZE := 128
atmega16: override BOOT_PAGE_LEN := 256
atmega16: AVR_FREQ := 16000000
ifndef HFUSE
# 512 byte boot, SPIEN
atmega16: HFUSE := 9C
endif
ifndef LFUSE
# BrownOut enable, Crystal/Resonator high Frequency (16MHz) 16KCK/14CK+65ms
atmega16: LFUSE := BF
endif

atmega16: hex_file


#
# ATmega32
################################################
# generic atmega32
# let board specific change the frequency and fuses
ifndef TARGET
atmega32: TARGET := atmega32
endif
atmega32: override MCU_TARGET := atmega32
atmega32: override FLASH_SIZE := 32768
atmega32: override FLASH_PAGE_SIZE := 128
atmega32: override BOOT_PAGE_LEN := 512
atmega32: AVR_FREQ := 11059200
ifndef HFUSE
# No OCD or JTAG, SPIEN, CKOPT (for full swing xtal), Bootsize=512B
atmega32: HFUSE := CE
endif
ifndef LFUSE
# 2.7V brownout, 11MHz Xtal, 16KCK/14CK+65ms
atmega32: LFUSE := BF
endif
atmega32: hex_file

#
# ATmega64
################################################
# generic atmega64
# let board specific change the frequency and fuses
ifndef TARGET
atmega64: TARGET := atmega64
endif
atmega64: override MCU_TARGET := atmega64
atmega64: override FLASH_SIZE := 65536
atmega64: override FLASH_PAGE_SIZE := 256
atmega64: override BOOT_PAGE_LEN := 1024
atmega64: AVR_FREQ := 8000000
ifndef HFUSE
# No OCD or JTAG, SPIEN, CKOPT (for full swing xtal), Bootsize=1024B
atmega64: HFUSE := CE
endif
ifndef LFUSE
# 2.7V brownout, 8MHz Xtal, 16KCK/14CK+65ms
atmega64: LFUSE := BF
endif
ifndef EFUSE
atmega64: EFUSE := FF
endif
atmega64: hex_file

#
# ATmega128
################################################
# generic atmega128
# let board specific change the frequency and fuses
ifndef TARGET
atmega128: TARGET := atmega128
endif
atmega128: override MCU_TARGET := atmega128
atmega128: override FLASH_SIZE := 131072
atmega128: override FLASH_PAGE_SIZE := 256
atmega128: override BOOT_PAGE_LEN := 1024
atmega128: AVR_FREQ := 8000000
ifndef HFUSE
# No OCD or JTAG, SPIEN, CKOPT (for full swing xtal), Bootsize=1024B
atmega128: HFUSE := CE
endif
ifndef LFUSE
# 2.7V brownout, 8MHz Xtal, 16KCK/14CK+65ms
atmega128: LFUSE := BF
endif
ifndef EFUSE
atmega128: EFUSE := FF
endif
atmega128: hex_file

#
# ATmega162
################################################
# generic atmega162
# let board specific change the frequency and fuses
atmega162: TARGET:= atmega162
atmega162: override MCU_TARGET := atmega162
atmega162: override FLASH_SIZE := 16384
atmega162: override FLASH_PAGE_SIZE := 128
atmega162: override BOOT_PAGE_LEN := 256
atmega162: AVR_FREQ := 8000000
ifndef HFUSE
#  Bootsize=512B
atmega162: HFUSE := 9C
endif
ifndef LFUSE
# 8MHz Xtal 16k CK + 65ms
atmega162: LFUSE := FF
endif
ifndef EFUSE
# 2.7V brownout
atmega162: EFUSE := FB
endif
atmega162: BAUD_RATE := 38400
atmega162: hex_file

#
# ATmega163
################################################
# generic atmega163
# let board specific change the frequency and fuses
atmega163: TARGET:= atmega163
atmega163: override MCU_TARGET := atmega163
atmega163: override FLASH_SIZE := 16384
atmega163: override FLASH_PAGE_SIZE := 128
atmega163: override BOOT_PAGE_LEN := 256
atmega163: AVR_FREQ := 4000000
ifndef HFUSE
#  Bootsize=512B
atmega163: HFUSE := FC
endif
ifndef LFUSE
## 2.7V brownout, internal RC
#atmega163: LFUSE := 92
#  Attention: OSCAL_CORR=-76 !!!
# 2.7V brownout, Xtal slow rising power
atmega163: LFUSE := 9A
endif
atmega163: BAUD_RATE := 38400
atmega163: hex_file

#
# ATmega323
################################################
# generic atmega323
# let board specific change the frequency and fuses
atmega323: TARGET:= atmega323
atmega323: override MCU_TARGET := atmega323
atmega323: override FLASH_SIZE := 32768
atmega323: override FLASH_PAGE_SIZE := 128
atmega323: override BOOT_PAGE_LEN := 512
atmega323: AVR_FREQ := 4000000
ifndef HFUSE
#  Bootsize=512B
atmega323: HFUSE := 9E
endif
ifndef LFUSE
# 2.7V brownout, Xtal slow rising power
atmega323: LFUSE := FA
endif
atmega323: BAUD_RATE := 38400
atmega323: hex_file

#
# ATmega8515
################################################
# generic atmega8515
# let board specific change the frequency and fuses
atmega8515: TARGET:= atmega8515
atmega8515: override MCU_TARGET := atmega8515
atmega8515: override FLASH_SIZE := 8192
atmega8515: override FLASH_PAGE_SIZE := 64
atmega8515: override BOOT_PAGE_LEN := 256
atmega8515: AVR_FREQ := 16000000
ifndef HFUSE
#  Bootsize=512B
atmega8515: HFUSE := DC
endif
ifndef LFUSE
# 2.7V brownout, Xtal slow rising power
atmega8515: LFUSE := BF
endif
atmega8515: hex_file

#
# ATmega8535
################################################
# generic atmega8535
# let board specific change the frequency and fuses
atmega8535: TARGET:= atmega8535
atmega8535: override MCU_TARGET := atmega8535
atmega8535: override FLASH_SIZE := 8192
atmega8535: override FLASH_PAGE_SIZE := 64
atmega8535: override BOOT_PAGE_LEN := 256
atmega8535: AVR_FREQ := 16000000
ifndef HFUSE
#  Bootsize=512B
atmega8535: HFUSE := DC
endif
ifndef LFUSE
# 2.7V brownout, Xtal slow rising power
atmega8535: LFUSE := BF
endif
atmega8535: hex_file

#
# ATmega8u2
################################################
# generic atmega8u2
# let board specific change the frequency and fuses
atmega8u2: TARGET:= atmega8u2
atmega8u2: override MCU_TARGET := atmega8u2
atmega8u2: override FLASH_SIZE := 8192
atmega8u2: override FLASH_PAGE_SIZE := 128
atmega8u2: override BOOT_PAGE_LEN := 512
atmega8u2: AVR_FREQ := 8000000
ifndef HFUSE
#  Bootsize=512B
atmega8u2: HFUSE := DE
endif
ifndef LFUSE
# 8MHz Xtal 16k CK + 65ms
atmega8u2: LFUSE := FF
endif
ifndef EFUSE
# 3.0V brownout
atmega8u2: EFUSE := F4
endif
atmega8u2: BAUD_RATE := 38400
atmega8u2: hex_file

#
# ATmega16u2
################################################
# generic atmega16u2
# let board specific change the frequency and fuses
atmega16u2: TARGET:= atmega16u2
atmega16u2: override MCU_TARGET := atmega16u2
atmega16u2: override FLASH_SIZE := 16384
atmega16u2: override FLASH_PAGE_SIZE := 128
atmega16u2: override BOOT_PAGE_LEN := 512
atmega16u2: AVR_FREQ := 8000000
ifndef HFUSE
#  Bootsize=512B
atmega16u2: HFUSE := DE
endif
ifndef LFUSE
# 8MHz Xtal 16k CK + 65ms
atmega16u2: LFUSE := FF
endif
ifndef EFUSE
# 3.0V brownout
atmega16u2: EFUSE := F4
endif
atmega16u2: BAUD_RATE := 38400
atmega16u2: hex_file

#
# ATmega32u2
################################################
# generic atmega32u2
# let board specific change the frequency and fuses
atmega32u2: TARGET:= atmega32u2
atmega32u2: override MCU_TARGET := atmega32u2
atmega32u2: override FLASH_SIZE := 32768
atmega32u2: override FLASH_PAGE_SIZE := 128
atmega32u2: override BOOT_PAGE_LEN := 512
atmega32u2: AVR_FREQ := 8000000
ifndef HFUSE
#  Bootsize=512B
atmega32u2: HFUSE := DE
endif
ifndef LFUSE
# 8MHz Xtal 16k CK + 65ms
atmega32u2: LFUSE := FF
endif
ifndef EFUSE
# 3.0V brownout
atmega32u2: EFUSE := F4
endif
atmega32u2: BAUD_RATE := 38400
atmega32u2: hex_file

#
# ATmega16u4
################################################
# generic atmega16u4
# let board specific change the frequency and fuses
atmega16u4: TARGET:= atmega16u4
atmega16u4: override MCU_TARGET := atmega16u4
atmega16u4: override FLASH_SIZE := 16384
atmega16u4: override FLASH_PAGE_SIZE := 128
atmega16u4: override BOOT_PAGE_LEN := 512
atmega16u4: AVR_FREQ := 8000000
ifndef HFUSE
#  Bootsize=512B
atmega16u4: HFUSE := 9E
endif
ifndef LFUSE
# 8MHz Xtal 16k CK + 65ms
atmega16u4: LFUSE := FF
endif
ifndef EFUSE
# 2.6V brownout
atmega16u4: EFUSE := F3
endif
atmega16u4: BAUD_RATE := 38400
atmega16u4: hex_file

#
# ATmega32u4
################################################
# generic atmega32u4
# let board specific change the frequency and fuses
atmega32u4: TARGET:= atmega32u4
atmega32u4: override MCU_TARGET := atmega32u4
atmega32u4: override FLASH_SIZE := 32768
atmega32u4: override FLASH_PAGE_SIZE := 128
atmega32u4: override BOOT_PAGE_LEN := 512
atmega32u4: AVR_FREQ := 8000000
ifndef HFUSE
#  Bootsize=512B
atmega32u4: HFUSE := 9E
endif
ifndef LFUSE
# 8MHz Xtal 16k CK + 65ms
atmega32u4: LFUSE := FF
endif
ifndef EFUSE
# 2.6V brownout
atmega32u4: EFUSE := C3
endif
atmega32u4: BAUD_RATE := 38400
atmega32u4: hex_file

################################################
# Test platforms
################################################
# Virtual boot block test
virboot8: TARGET := virboot8
virboot8: save_vect_num := EE_RDY_vect_num
virboot8: HFUSE := C9
export
virboot8:
	$(SUB_MAKE) VIRTUAL_BOOT_PARTITION=1 atmega8


